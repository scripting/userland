<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Fri, 02 Jun 2017 18:16:57 GMT -->
<opml version="2.0">
	<head>
		<title>workspace.userlandSamples.manilaToBlog</title>
		<dateCreated>Mon, 11 Feb 2002 19:48:02 GMT</dateCreated>
		<dateModified>Mon, 11 Feb 2002 19:53:42 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 10, 17, 20, 32</expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>50</windowTop>
		<windowLeft>50</windowLeft>
		<windowBottom>470</windowBottom>
		<windowRight>550</windowRight>
		</head>
	<body>
		<outline text="Changes" isComment="true">
			<outline text="1/3/02; 4:58:45 PM by DW">
				<outline text="Change &quot;playlist&quot; to &quot;radio&quot;."/>
				</outline>
			<outline text="02/01/01; 10:15:31 AM by JES" isComment="true">
				<outline text="Convert homepages of a downloaded Manila website into items in a Weblog."/>
				<outline text="How to use this script:">
					<outline text="1) First, open a downloaded Manila site's guest database. The site will be in a top-level table in the guest database."/>
					<outline text="2) Change the value of adrManilaSite in the local declaration below to the address of your downloaded Manila site -- the address of the top-level table in the guest database."/>
					<outline text="3) Run the script. (Warning: This step will erase everything in your current Weblog. Proceed with caution.)"/>
					<outline text="After a few seconds, your Weblog will open in the browser."/>
					</outline>
				</outline>
			</outline>
		<outline text=""/>
		<outline text="local (adrManilaSite = @myManilaSite) //put the address of your Manila site here."/>
		<outline text="local (flSplitMessages = true) //flag for whether messages are split into individual items"/>
		<outline text="local (flConvertToMacText = system.environment.isMac)"/>
		<outline text="local (adrBlog = @myUserLandData.blogs.default)"/>
		<outline text=""/>
		<outline text="on getMessageText (msgNum)">
			<outline text="local (adrMessages = @adrManilaSite^.[&quot;#discussionGroup&quot;].messages)"/>
			<outline text="local (adrMessage = @adrMessages^.[string.padWithZeros (msgNum, 7)])"/>
			<outline text="if defined (adrMessage^.bodyType) //the message might be an outline or opml">
				<outline text="case string.lower (adrMessage^.bodyType)">
					<outline text="&quot;text/x-opml&quot;">
						<outline text="local (theOutline)"/>
						<outline text="if flConvertToMacText">
							<outline text="op.xmlToOutline (string.latinToMac (string (adrMessage^.opml)), @theOutline)"/>
							</outline>
						<outline text="else">
							<outline text="op.xmlToOutline (string (adrMessage^.opml), @theOutline)"/>
							</outline>
						<outline text="return (theOutline)"/>
						</outline>
					<outline text="&quot;text/x-outline-tabbed&quot;">
						<outline text="if typeOf (adrMessage^.outline) == outlineType">
							<outline text="return (adrMessage^.outline)"/>
							</outline>
						<outline text="local (theOutline)"/>
						<outline text="if flConvertToMacText">
							<outline text="op.newOutlineObject (string.latinToMac (string (adrMessage^.outline)), @theOutline)"/>
							</outline>
						<outline text="else">
							<outline text="op.newOutlineObject (string (adrMessage^.outline), @theOutline)"/>
							</outline>
						<outline text="return (theOutline)"/>
						</outline>
					</outline>
				</outline>
			<outline text="if flConvertToMacText">
				<outline text="return (string.latinToMac (string (adrMessage^.body)))"/>
				</outline>
			<outline text="else">
				<outline text="return (string (adrMessage^.body))"/>
				</outline>
			</outline>
		<outline text=""/>
		<outline text="bundle //initialize the weblog">
			<outline text="new (tableType, adrBlog)"/>
			<outline text="myUserLandSuite.blog.init (adrBlog)"/>
			</outline>
		<outline text="bundle //convert homepages to weblog items">
			<outline text="on post (s, d)">
				<outline text="if s contains &quot;Leander&quot;">
					<outline text="msg (s)"/>
					</outline>
				<outline text="s = string.replaceAll (s, &quot;\\\&quot;&quot;, &quot;\&quot;&quot;) //we don't have to worry about escaping quotes -- we're not in the wsf"/>
				<outline text="s = string.replaceAll (s, &quot;\r\n&quot;, &quot;\r&quot;)"/>
				<outline text="s = string.replaceAll (s, &quot;\r\r&quot;, &quot;&lt;br&gt;&lt;br&gt;&quot;)"/>
				<outline text="myUserLandSuite.blog.post (s, adrBlog, d)"/>
				</outline>
			<outline text="on getMessageDate (msgNum)">
				<outline text="local (adrMessages = @adrManilaSite^.[&quot;#discussionGroup&quot;].messages)"/>
				<outline text="local (adrMessage = @adrMessages^.[string.padWithZeros (msgNum, 7)])"/>
				<outline text="return (adrMessage^.postTime)"/>
				</outline>
			<outline text="on getDayAddress (year, month, day, adrCalendar)">
				<outline text="return (@adrCalendar^.[year].[string.padWithZeros (month, 2)].[string.padWithZeros (day, 2)])"/>
				</outline>
			<outline text="on convertNewsItemsDay (year, month, day)">
				<outline text="local (adrDgDay = getDayAddress (year, month, day, @adrManilaSite^.[&quot;#discussionGroup&quot;].calendar))"/>
				<outline text="if defined (adrDgDay^)">
					<outline text="local (adrItem)"/>
					<outline text="for adrItem in adrDgDay">
						<outline text="local (s, d)"/>
						<outline text="local (adrMsg = @adrManilaSite^.[&quot;#discussionGroup&quot;].messages.[nameOf (adrItem^)])"/>
						<outline text="local (flDeleted = false)"/>
						<outline text="if defined (adrMsg^.flDeleted)">
							<outline text="flDeleted = adrMsg^.flDeleted"/>
							</outline>
						<outline text="if flDeleted">
							<outline text="continue"/>
							</outline>
						<outline text="if defined (adrMsg^.newsItem)">
							<outline text="if adrMsg^.newsItem.flPosted">
								<outline text="s = adrMsg^.newsItem.description"/>
								<outline text="d = adrMsg^.newsItem.postTime"/>
								<outline text="post (s, d)"/>
								</outline>
							</outline>
						</outline>
					<outline text="return (true)"/>
					</outline>
				<outline text="return (false)"/>
				</outline>
			<outline text="on stringToStories (s, d)">
				<outline text="Cribbed from manilaSuite.xml.getRssXml" isComment="true"/>
				<outline text="s = string.replaceAll (s, &quot;\r\n&quot;, &quot;\r&quot;)"/>
				<outline text="local (ix, lineString)"/>
				<outline text="while sizeOf (s) &gt; 0">
					<outline text="local (sizePattern)"/>
					<outline text="on tryPattern (pattern) //PBS 03/27/00: routine for looking for a pattern">
						<outline text="sizePattern = sizeOf (pattern)"/>
						<outline text="ix = string.patternMatch (pattern, s)"/>
						<outline text="return (ix &gt; 0)"/>
						</outline>
					<outline text="if not (tryPattern (&quot;&lt;li&gt;&quot;))" isComment="true"/>
					<outline text="if not (tryPattern (&quot;\r\r&quot;))">
						<outline text="if not tryPattern (&quot;\r&quot;)" isComment="true"/>
						<outline text="tryPattern (&quot;&lt;br&gt;&lt;br&gt;\r&quot;)"/>
						</outline>
					<outline text="if ix == 0">
						<outline text="lineString = s"/>
						<outline text="s = &quot;&quot;"/>
						</outline>
					<outline text="if ix &gt; 0">
						<outline text="lineString = string.mid (s, 1, ix - 1)"/>
						<outline text="s = string.delete (s, 1, ix + (sizePattern - 1))"/>
						<outline text="lineString = string.trimWhiteSpace (lineString)"/>
						<outline text="case string.lower (lineString) //skip lines with only common markup" isComment="true">
							<outline text="&quot;&quot;"/>
							<outline text="&quot;&lt;br&gt;&quot;"/>
							<outline text="&quot;&lt;p&gt;&quot;"/>
							<outline text="&quot;&lt;/p&gt;&quot;"/>
							<outline text="&quot;&lt;ul&gt;&quot;"/>
							<outline text="&quot;&lt;/ul&gt;&quot;"/>
							<outline text="&quot;&lt;li&gt;&quot;"/>
							<outline text="&quot;&lt;/li&gt;&quot;"/>
							<outline text="&quot;&lt;blockquote&gt;&quot;"/>
							<outline text="&quot;&lt;/blockquote&gt;&quot;">
								<outline text="continue"/>
								</outline>
							</outline>
						</outline>
					<outline text="post (lineString, d)"/>
					</outline>
				</outline>
			<outline text="on convertOutline (theOutline, d)">
				<outline text="if flSplitMessages">
					<outline text="stringToStories (string (theOutline), d)"/>
					</outline>
				<outline text="else //post the outline as a single story rendered with the pikeRenderer">
					<outline text="local (s)"/>
					<outline text="local (pageTable, oldPta); new (tableType, @pageTable)"/>
					<outline text="try {oldPta = html.getPageTableAddress ()}"/>
					<outline text="html.setPageTableAddress (@pageTable)"/>
					<outline text="s = pikeRenderer (@theOutline)"/>
					<outline text="html.deletePageTableAddress ()"/>
					<outline text="post (s, d)"/>
					</outline>
				</outline>
			<outline text="on convertString (s, d)">
				<outline text="if flSplitMessages">
					<outline text="stringToStories (s, d)"/>
					</outline>
				<outline text="else //post the message as a single story">
					<outline text="post (s, d)"/>
					</outline>
				</outline>
			<outline text="on convertDay (year, month, day)">
				<outline text="local (s, d)"/>
				<outline text="local (adrDay = getDayAddress (year, month, day, adrManilaSite))"/>
				<outline text="if defined (adrDay^.flNewsItems) and adrDay^.flNewsItems">
					<outline text="convertNewsItemsDay (year, month, day)"/>
					</outline>
				<outline text="else //convert a message to blog items">
					<outline text="s = getMessageText (adrDay^.msgNum)"/>
					<outline text="d = getMessageDate (adrDay^.msgNum)"/>
					<outline text="if typeOf (s) == outlineType">
						<outline text="convertOutline (s, d)"/>
						</outline>
					<outline text="else">
						<outline text="convertString (s, d)"/>
						</outline>
					</outline>
				</outline>
			<outline text="on walkCalendar ()">
				<outline text="local (year, startYear = 1999, endYear = date.year ())"/>
				<outline text="for year = startYear to endYear">
					<outline text="local (month)"/>
					<outline text="if defined (adrManilaSite^.[year])">
						<outline text="for month = 1 to 12">
							<outline text="local (day, monthString = string.padWithZeros (month, 2))"/>
							<outline text="if defined (adrManilaSite^.[year].[monthString])">
								<outline text="for day = 1 to 31">
									<outline text="local (dayString = string.padWithZeros (day, 2))"/>
									<outline text="if defined (adrManilaSite^.[year].[monthString].[dayString])">
										<outline text="msg (&quot;Creating &quot; + date.shortString (date.set (day, month, year, 0, 0, 0)) + &quot;...&quot;)"/>
										<outline text="convertDay (year, month, day)"/>
										</outline>
									</outline>
								</outline>
							</outline>
						</outline>
					</outline>
				</outline>
			<outline text="walkCalendar ()"/>
			<outline text="msg (&quot;&quot;)"/>
			</outline>
		<outline text="bundle //publish the weblog, and open in the browser">
			<outline text="myUserLandSuite.blog.publish (@myUserLandData.blogs.[blogName])"/>
			<outline text="local (pc = file.getPathChar ())"/>
			<outline text="local (blogPath = myUserLandData.blogs.default.prefs.homePageFilePath)"/>
			<outline text="blogPath = string.replaceAll (blogPath, &quot;/&quot;, pc)"/>
			<outline text="blogPath = user.radio.prefs.wwwFolder + blogPath"/>
			<outline text="webBrowser.openDocument (blogPath)"/>
			<outline text="webBrowser.bringToFront ()"/>
			</outline>
		</body>
	</opml>
