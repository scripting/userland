<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Sat, 03 Jun 2017 03:19:07 GMT -->
<opml version="2.0">
	<head>
		<title>workspace.userlandSamples.convertWorknotes.convert</title>
		<dateCreated>Tue, 30 Jul 2013 18:44:28 GMT</dateCreated>
		<dateModified>Sat, 03 Jun 2017 03:19:07 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 12, 33</expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>85</windowTop>
		<windowLeft>1219</windowLeft>
		<windowBottom>1005</windowBottom>
		<windowRight>2158</windowRight>
		</head>
	<body>
		<outline text="on convert ()">
			<outline text="Changes" isComment="true">
				<outline text="7/30/13; 2:44:32 PM by DW">
					<outline text="Created."/>
					</outline>
				</outline>
			<outline text="local (adrinput = @workspace.userlandSamples.convertWorknotes.input, xstructIn)"/>
			<outline text="xml.compile (op.outlinetoxml (adrinput), @xstructIn)"/>
			<outline text="workspace.userlandSamples.convertWorknotes.xstructIn = xstructIn" isComment="true"/>
			<outline text=""/>
			<outline text="local (adroutput = @workspace.userlandSamples.convertWorknotes.xstructOut)"/>
			<outline text="adroutput^ = workspace.userlandSamples.convertWorknotes.xstructTemplate"/>
			<outline text="new (tabletype, adroutput)" isComment="true"/>
			<outline text=""/>
			<outline text="on findnode (adrparent, namenode, nameatt)">
				<outline text="local (adr)"/>
				<outline text="for adr in adrparent">
					<outline text="if nameof (adr^) endswith &quot;outline&quot;">
						<outline text="if adr^.[&quot;/atts&quot;].text == namenode">
							<outline text="return (adr)"/>
							</outline>
						</outline>
					</outline>
				<outline text="local (adrsub = xml.addtable (adrparent, &quot;outline&quot;))"/>
				<outline text="local (adratts = @adrsub^.[&quot;/atts&quot;])"/>
				<outline text="new (tabletype, adratts)"/>
				<outline text="adratts^.text = namenode"/>
				<outline text="adratts^.name = nameatt"/>
				<outline text="return (adrsub)"/>
				</outline>
			<outline text="on savepost (adrpost)">
				<outline text="local (adratts = @adrpost^.[&quot;/atts&quot;])"/>
				<outline text="scratchpad.myatts = adratts^; edit (@scratchpad.myatts)" isComment="true"/>
				<outline text="local (when = date (adratts^.created))"/>
				<outline text="local (day, month, year, hour, minute, second)"/>
				<outline text="date.get (when, @day, @month, @year, @hour, @minute, @second)"/>
				<outline text="scratchpad.mypost = adrpost^; edit (@scratchpad.mypost)" isComment="true"/>
				<outline text=""/>
				<outline text="local (nomad = xml.opml.getbodyaddress (adroutput))"/>
				<outline text="nomad = findnode (nomad, year, year)"/>
				<outline text="nomad = findnode (nomad, date.monthtostring (month) + &quot; &quot; + year, string.padwithzeros (month, 2))"/>
				<outline text="nomad = findnode (nomad, date.monthtostring (month) + &quot; &quot; + day, string.padwithzeros (day, 2))"/>
				<outline text=""/>
				<outline text="adrpost^.[&quot;/atts&quot;].type = &quot;outline&quot;"/>
				<outline text="nomad^.[nameof (adrpost^)] = adrpost^"/>
				</outline>
			<outline text="on visitlevel (adrlevel) ">
				<outline text="local (adr)"/>
				<outline text="for adr in adrlevel">
					<outline text="if nameof (adr^) endswith &quot;outline&quot;">
						<outline text="local (adratts = @adr^.[&quot;/atts&quot;])"/>
						<outline text="if defined (adratts^) and defined (adratts^.type) and (adratts^.type != &quot;index&quot;)">
							<outline text="savepost (adr)"/>
							</outline>
						<outline text="else">
							<outline text="visitlevel (adr)"/>
							</outline>
						</outline>
					</outline>
				</outline>
			<outline text="visitlevel (xml.opml.getbodyaddress (@xstructIn))"/>
			<outline text=""/>
			<outline text="local (xmltext = xml.decompile (adroutput))"/>
			<outline text="op.xmltooutline (xmltext, @workspace.userlandSamples.convertWorknotes.output)"/>
			<outline text="file.writewholefile (user.prefs.dropboxfolder + &quot;apps:fargo:worknotesConverted.opml&quot;, xmltext)"/>
			</outline>
		<outline text="bundle //test code">
			<outline text="convert ()"/>
			</outline>
		</body>
	</opml>
